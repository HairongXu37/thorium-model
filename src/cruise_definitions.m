function defs = cruise_definitions()
%CRUISE_DEFINITIONS Centralize cruise selection logic and options.
%
% Syntax
%   defs = cruise_definitions()
%
% Description
%   Returns a 1×N struct array where each element defines how a specific
%   GEOTRACES cruise is selected and processed by the pipeline. The fields
%   specify selection rules, longitudinal wrapping for dateline handling,
%   cross-section orientation, and a few convenience flags.
%
% Output
%   defs  1×N struct array with fields:
%     name          (string)  Cruise label (e.g., "GA02")
%     orientation   (string)  'zonal' | 'merid'   % x-section/mask axis
%     wrapMode      (string)  'none' | 'shift180' % dateline handling
%     splitOutputs  (logical) If true, also store x_1/x_2 & y_1/y_2 tracks
%     clipLonToGrid (logical) If true, clip longitudes to grid bounds
%     selector      (func)    @(cruise,lat,lon,date) -> logical index of stations
%
% Notes
%   • The anonymous function 'selector' operates on per-station vectors
%     (cruise, lat, lon, date) and returns a logical index (same length).
%   • wrapMode='shift180' tells PROCESS_CRUISE to use the 180°-shifted grid
%     and reorder longitudes (useful for tracks crossing the dateline).
%   • To add a new cruise, append another 'add(struct(...))' block following
%     the same pattern below.

defs = [];

add = @(s) assignin('caller','defs',[evalin('caller','defs'), s]);

% GA02 (meridional)
add(struct( ...
    'name',"GA02", 'orientation',"merid", 'wrapMode',"none", ...
    'splitOutputs',false, 'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GA02') & ...
        ( (date<2413 & lat>30) | (date<1913 & lat<30) ) & (date>1583) ));

% GA03w (zonal)
add(struct( ...
    'name',"GA03w", 'orientation',"zonal", 'wrapMode',"none", ...
    'splitOutputs',false,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GA03') & ((date>2000) | (date<1770 & lat<18)) ));

% GA03e (meridional)
add(struct( ...
    'name',"GA03e", 'orientation',"merid", 'wrapMode',"none", ...
    'splitOutputs',false,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GA03') & ((date<1770 & lat>20) | (date<1765.5 & date>1765)) ));

% GA10 (zonal, crosses dateline)
add(struct( ...
    'name',"GA10", 'orientation',"zonal", 'wrapMode',"shift180", ...
    'splitOutputs',true,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GA10') & ((date>1770) | (date<1766)) ));

% GP16 (zonal)
add(struct( ...
    'name',"GP16", 'orientation',"zonal", 'wrapMode',"none", ...
    'splitOutputs',false,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GP16') ));

% GPc01w (zonal)
add(struct( ...
    'name',"GPc01w", 'orientation',"zonal", 'wrapMode',"none", ...
    'splitOutputs',false,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GPc01') & (date>1320) ));

% GIPY05w (meridional, sector window)
add(struct( ...
    'name',"GIPY05w", 'orientation',"merid", 'wrapMode',"none", ...
    'splitOutputs',false,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GIPY05') & (lon<307) & (lon>280) & (lat>-60) ));

% GIPY05e (meridional, dateline neighborhood + clipping)
add(struct( ...
    'name',"GIPY05e", 'orientation',"merid", 'wrapMode',"shift180", ...
    'splitOutputs',true,'clipLonToGrid',true, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GIPY05') & ( (lon<=361 & lon>358.9) | (lon<50) ) ));

% GSc02 (meridional)
add(struct( ...
    'name',"GSc02", 'orientation',"merid", 'wrapMode',"none", ...
    'splitOutputs',false,'clipLonToGrid',false, ...
    'selector',@(cruise,lat,lon,date) strcmp(cruise,'GSc02') ));

end
